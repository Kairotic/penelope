vPDF "test.pdf" (100, 20) $
  fast 48 $
  stack [superimpose id $ every 3 (invert <$>) $ superimpose (iter 4) $ superimpose ((1/2) <~) $ "[black black white white]"
        , superimpose id $ every 2 (invert <$>) $ superimpose (iter 4) $ superimpose ((1/2) <~) $ "[black black white white]"
        , superimpose id $ every 4 (slow 2 . (invert <$>)) $ superimpose (iter 4) $ superimpose ((1/2) <~) $ "[black black white white]"
        , superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ superimpose ((1/2) <~) $ "[black white]"
        , superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ "[black white]"
        , superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ "[<black white> <white black>]"
        , superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ "[<black white> <white black> <black white black> <white black white>]"
        , (invert <$> (superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ "[<black white> <white black> <black white black> <white black white>]" :: Pattern ColourD))
        , every 2 (slow 2) (invert <$> (superimpose id $ whenmod 16 4 ( (invert <$>)) $ superimpose (iter 4) $ "[<black white> <white black> <black white black> <white black white>]" :: Pattern ColourD))
        , superimpose (invert <$>) $ slow (3/2) $ ("black black white white black white" :: Pattern ColourD)
        ]


:t invert

let and a b | a == white && b == white = white
    and a b | otherwise = black
    invert a | a == black = white
             | otherwise = black


vPDF "test.pdf" (100, 20) $
  fast 32 $
  stack ["black white white whit white black white white"
        ]
